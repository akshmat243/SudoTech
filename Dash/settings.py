"""
Django settings for Dash project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2da&1r3x5e4z95a4aaz%aj@$z$#d!d#r^bno&e%e%y5ay5lok2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

SITE_ID = 1

INSTALLED_APPS = [
    'jazzmin',
    'import_export',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    # 'allauth.socialaccount.providers.facebook',
    
    'UserMGMT',
    'rest_framework',
    'Dashboard',
    'items',
    'proposal',
    'retainer',
    'invoice',
    'purchases',
    'quotation',
    'projects',
    'accounting',
    'doubleentry',
    'hrm',
    'recruitment',
    'jobsearch',
    'biometricattendance',
    'procurement',
    'pos',
    'crm',
    'formbuilder',
    'sales',
    'whatsapp',
    'Facebook',
    'instagram',
    'zulip',
    'youtube',
    'vcard',
    'LMS',
    'entertainment',
    'moviebooking',
    'waterpark',
    'coworkingspace',
    'dietnutrition',
    'SecurityGuard',
    'SportsClub',
    'GardenMGMT',
    'LockerSafe',
    'EventMGMT',
    'HotelRooms',
    'Rotas',
    'Comission',
    'CMMS',
    'SchoolInstitute',
    'MusicInstitute',
    'Childcare',
    'DrivingSchool',
    'GymMGMT',
    'Construction',
    'Fleet',
    'vehicleTrade',
    'vehicleBooking',
    'CarDealership',
    'Agriculture',
    'LegalCase',
    'TourTravel',
    'Insurance',
    'Courier',
    'Freight',
    'GarageWorkshop',
    'NewsPaper',
    'PropertyMGMT',
    'ElderlyCare',
    'Hospital',
    'OpticalEyeCare',
    'MedicalLab',
    'Pharmacy',
    'BeautySpa',
    'Bookings',
    'Beverages',
    'Facilities',
    'Parking',
    'SupportTicket',
    'TailoringFasionDesign',
    'Restaurant',
    'DairyCattle',
    'WasteMGMT',
    'Consignment',
    'Cleaning',
    'MobileService',
    'VehicleInspection',
    'MachineRepair',
    'Repair',
    'AI',
    'Laundary',
    'Catering',
    'Rental',
    'SalesAgent',
    'SalesForce',
    'Contract',
    'Documents',
    'GoogleDocs',
    'CustomField',
    'WooCommerce',
    'Shopify',
    'Indiamart',
    'Sage',
    'Asana',
    'Inventory',
    'Assets',
    'Requests',
    'FixEquipments',
    'Hubspot',
    'Calendar',
    'MeetingHub',
    'Appointment',
    'Portfolio',
    'ResumeBuilder',
    'Reminder',
    'Workflow',
    'GoogleSheet',
    'Spreadsheet',
    'GoogleLeads',
    'InnovationCenter',
    'BusinessMapping',
    'RoadmapCentral',
    'Planning',
    'InternalKnowledge',
    'CallHub',
    'QueueMGMT',
    'VideoHub',
    'PhotoStudio',
    'FileSharing',
    'Feedback',
    'Newsletter',
    'EmailBox',
    'Sendinblue',
    'OneNotes',
    'Notes',
    'TeamWorkload',
    'QuizMGMT',
    'PrettyCash',
    'Trello',
    'ToDo',
    'Visitors',
    'HelpDesk',
    'ActivityLog',
    'GoogleMeet',
    'GotoMeeting',
    'ZoomMeeting',
    'OutlookCalendar',
    'SideMenuBuilder',
    'TimeTracker',
    'TimeSheet',
    'WhereByMeeting',
    'ZohoMeeting',
    'Messenger',
    'LiveStormMeeting',
    'rest_framework_simplejwt.token_blacklist',
    
    
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'UserMGMT.middleware.RolePermissionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    'allauth.account.middleware.AccountMiddleware',
]



ROOT_URLCONF = 'Dash.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Dash.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type

# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'UserMGMT.User'


SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "APP": {
            "client_id": os.getenv('GOOGLE_CLIENT_ID'),
            "secret": os.getenv('GOOGLE_CLIENT_SECRET'),
            "key": ""
        },
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
            "prompt" : "consent"
        },
    },
    "github": {
        "APP": {
            "client_id": os.getenv('GITHUB_CLIENT_ID'),
            "secret": os.getenv('GITHUB_CLIENT_SECRET'),
            "key": ""
        },
        'SCOPE': ['user', 'user:email'],
        'AUTH_PARAMS': {'allow_signup': 'true'},
    }
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}


SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('Bearer',),
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'akshmat243@gmail.com'
EMAIL_HOST_PASSWORD = 'rcdg hupq snku nymi'
DEFAULT_FROM_EMAIL = 'akshmat243@gmail.com'

AUTHENTICATION_BACKENDS = [
    'UserMGMT.backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]


SOCIALACCOUNT_LOGIN_ON_GET=True
ACCOUNT_INACTIVE_REDIRECT_URL = '/UserMGMT/login/'

SOCIALACCOUNT_ADAPTER = 'UserMGMT.adapter.CombinedSocialAccountAdapter'



LOGIN_REDIRECT_URL = '/UserMGMT/dashboard/'
LOGOUT_REDIRECT_URL = '/UserMGMT/login/'

ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"
